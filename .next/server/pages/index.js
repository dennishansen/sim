/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_ThreeApp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ThreeApp */ \"./utils/ThreeApp.js\");\n/* harmony import */ var _utils_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/renderer */ \"./utils/renderer.js\");\n/* harmony import */ var _utils_renderer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils_renderer__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_ThreeApp__WEBPACK_IMPORTED_MODULE_1__]);\n_utils_ThreeApp__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];\n\n\n\nfunction Home() {\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_utils_ThreeApp__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"/Users/dennishansen/development/sim/pages/index.js\",\n        lineNumber: 5,\n        columnNumber: 10\n    }, this));\n};\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ0E7QUFFekIsUUFBUSxDQUFDRSxJQUFJLEdBQUcsQ0FBQztJQUM5QixNQUFNLDZFQUFFRix1REFBUTs7Ozs7QUFDbEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RocmVlLXJlYWN0Ly4vcGFnZXMvaW5kZXguanM/YmVlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGhyZWVBcHAgZnJvbSBcIi4uL3V0aWxzL1RocmVlQXBwXCI7XG5pbXBvcnQgcmVuZGVyZXIgZnJvbSBcIi4uL3V0aWxzL3JlbmRlcmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIHJldHVybiA8VGhyZWVBcHAgLz5cbn0iXSwibmFtZXMiOlsiVGhyZWVBcHAiLCJyZW5kZXJlciIsIkhvbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "./utils/ThreeApp.js":
/*!***************************!*\
  !*** ./utils/ThreeApp.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__]);\nthree__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];\n\n\n\nfunction BinaryNetworkSimulator() {\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Create a WebGL renderer and add it to the DOM\n        const container = containerRef.current;\n        const canvas = canvasRef.current;\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n            canvas\n        });\n        // Create a time integer\n        let time = 0;\n        // Set the background color\n        renderer.setClearColor(0, 1);\n        // Set up the command key state\n        let commandDown = false;\n        // Create an array of nodes\n        let nodes = [\n            {\n                x: -1,\n                y: -1,\n                on: true,\n                id: 0\n            },\n            {\n                x: -1,\n                y: 0,\n                on: true,\n                id: 1\n            },\n            {\n                x: -1,\n                y: 1,\n                on: false,\n                id: 2\n            },\n            {\n                x: 0,\n                y: -1,\n                on: false,\n                id: 3\n            },\n            {\n                x: 0,\n                y: 0,\n                on: true,\n                id: 4\n            },\n            {\n                x: 0,\n                y: 1,\n                on: false,\n                id: 5\n            },\n            {\n                x: 1,\n                y: -1,\n                on: false,\n                id: 6\n            },\n            {\n                x: 1,\n                y: 0,\n                on: false,\n                id: 7\n            },\n            {\n                x: 1,\n                y: 1,\n                on: true,\n                id: 8\n            }, \n        ];\n        // Create a scene\n        const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        // Create a node in a given position\n        function renderNode({ x , y , on , id  }) {\n            // Create a circle mesh that is green if the node is on, and red if it's off\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.CircleGeometry(0.1, 32);\n            const material = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                color: on ? 65280 : 16777215\n            });\n            const node = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n            node.position.x = x;\n            node.position.y = y;\n            // Add an id to the node mesh\n            node.userData.id = \"node_\" + id;\n            // Add the mesh to the scene\n            scene.add(node);\n        }\n        // Create a function that creates a line between two nodes\n        function renderConnection({ node1 , node2 , id  }) {\n            node1 = nodes.find((node)=>node.id === node1\n            );\n            node2 = nodes.find((node)=>node.id === node2\n            );\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n            const positions = new Float32Array(6);\n            positions[0] = node1.x;\n            positions[1] = node1.y;\n            positions[2] = 0;\n            positions[3] = node2.x;\n            positions[4] = node2.y;\n            positions[5] = 0;\n            geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(positions, 3));\n            const material = new three__WEBPACK_IMPORTED_MODULE_2__.LineBasicMaterial({\n                color: 16777215\n            });\n            const line = new three__WEBPACK_IMPORTED_MODULE_2__.Line(geometry, material);\n            // Add an id to the node mesh\n            line.userData.id = \"connection_\" + id;\n            scene.add(line);\n        }\n        // Create an array of connections between nodes\n        const connections = [\n            {\n                node1: 0,\n                node2: 1,\n                id: 0\n            },\n            {\n                node1: 0,\n                node2: 1,\n                id: 1\n            },\n            {\n                node1: 0,\n                node2: 3,\n                id: 2\n            },\n            {\n                node1: 1,\n                node2: 2,\n                id: 3\n            },\n            {\n                node1: 1,\n                node2: 4,\n                id: 4\n            },\n            {\n                node1: 2,\n                node2: 5,\n                id: 5\n            },\n            {\n                node1: 3,\n                node2: 4,\n                id: 6\n            },\n            {\n                node1: 3,\n                node2: 6,\n                id: 7\n            },\n            {\n                node1: 4,\n                node2: 5,\n                id: 8\n            },\n            {\n                node1: 4,\n                node2: 7,\n                id: 9\n            },\n            {\n                node1: 5,\n                node2: 8,\n                id: 10\n            },\n            {\n                node1: 6,\n                node2: 7,\n                id: 11\n            },\n            {\n                node1: 7,\n                node2: 8,\n                id: 12\n            }\n        ];\n        // Render the connections\n        connections.forEach(renderConnection);\n        // Render the nodes\n        nodes.forEach(renderNode);\n        // Create a function that determines if a node is on or off on the next tick\n        function nextNodeState(node1) {\n            // Get the number of on neighbors\n            const onNeighbors = connections.filter((connection)=>{\n                return connection.node1 === node1.id || connection.node2 === node1.id;\n            }).map((connection)=>{\n                return connection.node1 === node1.id ? connection.node2 : connection.node1;\n            }).map((id)=>{\n                return nodes.find((node)=>node.id === id\n                );\n            }).filter((node)=>node.on\n            ).length;\n            // If the node is on, it will turn off if it has 0 or 1 on neighbors\n            if (node1.on) {\n                return onNeighbors > 1;\n            }\n            // If the node is off, it will turn on if it has 2 or more on neighbors\n            return onNeighbors >= 2;\n        }\n        // Create a function that updates the state of all nodes\n        function updateNodes() {\n            nodes = nodes.map((node)=>{\n                return {\n                    ...node,\n                    on: nextNodeState(node)\n                };\n            });\n        }\n        // Every one second, increment the time and update the nodes\n        setInterval(()=>{\n            time += 1;\n            updateNodes();\n            // Remove all nodes from the scene\n            scene.children = scene.children.filter((child)=>{\n                return child.type !== \"Mesh\";\n            });\n            // Render the nodes\n            nodes.forEach(renderNode);\n        }, 1000);\n        // Create a function that updates a node in the array given an id\n        function updateNode(id, update) {\n            // Find the node in the array and update it\n            nodes = nodes.map((node)=>{\n                if (node.id === id) {\n                    return {\n                        ...node,\n                        ...update\n                    };\n                }\n                return node;\n            });\n        }\n        let draggedNode = null;\n        // Enable the user to click and drag a node to a new position\n        function onMouseDown(event) {\n            // If the command key is being held down, don't do anything\n            if (commandDown) {\n                return;\n            }\n            // Get the mouse position\n            const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            // Create a raycaster\n            const raycaster = new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster();\n            raycaster.setFromCamera(mouse, camera);\n            // Get the intersections\n            const intersects = raycaster.intersectObjects(scene.children);\n            console.log(\"intersects\", intersects);\n            // Find the the first node where the userData id starts with \"node_\"\n            const node = intersects.find((intersect)=>{\n                return intersect.object.userData.id.startsWith(\"node_\");\n            });\n            // If there is no intersection, return\n            if (!node) {\n                return;\n            }\n            // Get the id of the node\n            const id = node.object.userData.id.split(\"_\")[1];\n            // Mark which node is being dragged\n            draggedNode = id;\n        }\n        // Add the mouse down event listener\n        window.addEventListener(\"mousedown\", onMouseDown);\n        // Change the position of the dragged node\n        function onMouseMove(event) {\n            // If the command key is being held down, don't do anything\n            if (commandDown) {\n                return;\n            }\n            // If there is no dragged node, return\n            if (!draggedNode) {\n                return;\n            }\n            // Get the mouse position\n            const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            // Update the node being dragged with the new position\n            updateNode(draggedNode, {\n                x: mouse.x,\n                y: mouse.y\n            });\n        // // Remove all nodes from the scene\n        // scene.children = scene.children.filter((child) => {\n        //   return child.type !== \"Mesh\";\n        // })\n        // Rerender the dragged node\n        // renderNode(nodes.find((node) => node.id === draggedNode));\n        // Render the connections\n        // connections.forEach(renderConnection);\n        }\n        // Add the mouse move event listener\n        window.addEventListener(\"mousemove\", onMouseMove);\n        // // When the mouse is released, set the dragged node to null and update the node\n        // function onMouseUp() {\n        //   // If the command key is being held down, don't do anything\n        //   if (commandDown) {\n        //     return;\n        //   }\n        //   // If there is no dragged node, return\n        //   if (!draggedNode) {\n        //     return;\n        //   }\n        //   // Update the node\n        //   nodes = nodes.map((node) => {\n        //     if (node.id === draggedNode.id) {\n        //       return draggedNode;\n        //     }\n        //     return node;\n        //   });\n        //   // Set the dragged node to null\n        //   draggedNode = null;\n        // }\n        // // Add the mouse up event listener\n        // window.addEventListener(\"mouseup\", onMouseUp);\n        // Create a camera and a scene\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.z = 5;\n        // Resize the canvas to fill browser window dynamically\n        function onWindowResize() {\n            camera.aspect = container.clientWidth / container.clientHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(container.clientWidth, container.clientHeight);\n        }\n        // Add the resize listener\n        window.addEventListener(\"resize\", onWindowResize);\n        // Pain and zoom based on mouse wheel events\n        function onMouseWheel(event) {\n            // If the command key is being held down, zoom\n            if (commandDown) {\n                camera.position.z += event.deltaY * 0.01;\n                return;\n            }\n            // Otherwise, pan\n            camera.position.x += event.deltaX * 0.01;\n            camera.position.y -= event.deltaY * 0.01;\n        }\n        // Add the mouse wheel listener\n        canvas.addEventListener(\"wheel\", onMouseWheel);\n        // Set the command key state based on key presses\n        function onKeyDown(event) {\n            if (event.key === \"Meta\") {\n                commandDown = true;\n            }\n        }\n        // Set the command key state based on key releases\n        function onKeyUp(event) {\n            if (event.key === \"Meta\") {\n                commandDown = false;\n            }\n        }\n        // Add the key listeners\n        window.addEventListener(\"keydown\", onKeyDown);\n        window.addEventListener(\"keyup\", onKeyUp);\n        // Render the scene\n        function render() {\n            renderer.render(scene, camera);\n            requestAnimationFrame(render);\n        }\n        // Call the resize listener and render the scene\n        onWindowResize();\n        render();\n        // Clean up\n        return ()=>{\n            window.removeEventListener(\"resize\", onWindowResize);\n            renderer.dispose();\n        };\n    }, []);\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        style: {\n            width: \"100%\",\n            height: \"100%\",\n            position: \"fixed\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef,\n            style: {\n                width: \"100%\",\n                height: \"100%\"\n            }\n        }, void 0, false, {\n            fileName: \"/Users/dennishansen/development/sim/utils/ThreeApp.js\",\n            lineNumber: 352,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dennishansen/development/sim/utils/ThreeApp.js\",\n        lineNumber: 348,\n        columnNumber: 5\n    }, this));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BinaryNetworkSimulator);\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/ThreeApp.js\n");

/***/ }),

/***/ "./utils/renderer.js":
/*!***************************!*\
  !*** ./utils/renderer.js ***!
  \***************************/
/***/ (() => {

eval("function createNode(id, computeFn) {\n    return {\n        id,\n        computeFn\n    };\n}\nfunction createRelationship(parentId, childId) {\n    return {\n        parentId,\n        childId\n    };\n}\nfunction getParentIds(nodeId, relationships1) {\n    return relationships1.filter((relationship)=>relationship.childId === nodeId\n    ).map((relationship)=>relationship.parentId\n    );\n}\nfunction getChildIds(nodeId, relationships2) {\n    return relationships2.filter((relationship)=>relationship.parentId === nodeId\n    ).map((relationship)=>relationship.childId\n    );\n}\nfunction executeNode(node, dataMap1, relationships3) {\n    const parentIds = getParentIds(node.id, relationships3);\n    const parentData = parentIds.map((parentId)=>dataMap1.get(parentId)\n    );\n    const nodeData = node.computeFn(parentData);\n    dataMap1.set(node.id, nodeData);\n}\nfunction executeGraph(nodes1, relationships4) {\n    const dataMap2 = new Map();\n    const pendingNodes = [\n        ...nodes1\n    ];\n    const visited = new Set();\n    while(pendingNodes.length > 0){\n        const node = pendingNodes.shift();\n        const parentIds = getParentIds(node.id, relationships4);\n        const allParentDataAvailable = parentIds.every((parentId)=>dataMap2.has(parentId)\n        );\n        if (!allParentDataAvailable) {\n            pendingNodes.push(node);\n            continue;\n        }\n        if (!visited.has(node.id)) {\n            executeNode(node, dataMap2, relationships4);\n            visited.add(node.id);\n        }\n    }\n    return dataMap2;\n}\n// Define a simple compute function that generates data based on multiple parent data.\nfunction computeNode(parentDataArray) {\n    const sum = parentDataArray.reduce((acc, data)=>acc + data\n    , 0);\n    return sum;\n}\n// Build the graph.\nconst nodes = [\n    createNode('root', ()=>1\n    ),\n    createNode('child1', ([rootData])=>rootData + 1\n    ),\n    createNode('child2', ([rootData])=>rootData + 2\n    ),\n    createNode('child3', ([child1Data, child2Data])=>child1Data * child2Data\n    ), \n];\n// Define relationships between nodes.\nconst relationships = [\n    createRelationship('root', 'child1'),\n    createRelationship('root', 'child2'),\n    createRelationship('child1', 'child3'),\n    createRelationship('child2', 'child3'), \n];\n// Execute the graph.\nconst dataMap = executeGraph(nodes, relationships);\n// Get the computed data for any node.\nconsole.log('ChildNode3 data:', dataMap.get('child3'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZS1yZWFjdC8uL3V0aWxzL3JlbmRlcmVyLmpzP2Y2ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY3JlYXRlTm9kZShpZCwgY29tcHV0ZUZuKSB7XG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgY29tcHV0ZUZuLFxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWxhdGlvbnNoaXAocGFyZW50SWQsIGNoaWxkSWQpIHtcbiAgcmV0dXJuIHtcbiAgICBwYXJlbnRJZCxcbiAgICBjaGlsZElkLFxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRQYXJlbnRJZHMobm9kZUlkLCByZWxhdGlvbnNoaXBzKSB7XG4gIHJldHVybiByZWxhdGlvbnNoaXBzXG4gICAgLmZpbHRlcigocmVsYXRpb25zaGlwKSA9PiByZWxhdGlvbnNoaXAuY2hpbGRJZCA9PT0gbm9kZUlkKVxuICAgIC5tYXAoKHJlbGF0aW9uc2hpcCkgPT4gcmVsYXRpb25zaGlwLnBhcmVudElkKTtcbn1cblxuZnVuY3Rpb24gZ2V0Q2hpbGRJZHMobm9kZUlkLCByZWxhdGlvbnNoaXBzKSB7XG4gIHJldHVybiByZWxhdGlvbnNoaXBzXG4gICAgLmZpbHRlcigocmVsYXRpb25zaGlwKSA9PiByZWxhdGlvbnNoaXAucGFyZW50SWQgPT09IG5vZGVJZClcbiAgICAubWFwKChyZWxhdGlvbnNoaXApID0+IHJlbGF0aW9uc2hpcC5jaGlsZElkKTtcbn1cblxuZnVuY3Rpb24gZXhlY3V0ZU5vZGUobm9kZSwgZGF0YU1hcCwgcmVsYXRpb25zaGlwcykge1xuICBjb25zdCBwYXJlbnRJZHMgPSBnZXRQYXJlbnRJZHMobm9kZS5pZCwgcmVsYXRpb25zaGlwcyk7XG4gIGNvbnN0IHBhcmVudERhdGEgPSBwYXJlbnRJZHMubWFwKChwYXJlbnRJZCkgPT4gZGF0YU1hcC5nZXQocGFyZW50SWQpKTtcbiAgY29uc3Qgbm9kZURhdGEgPSBub2RlLmNvbXB1dGVGbihwYXJlbnREYXRhKTtcbiAgZGF0YU1hcC5zZXQobm9kZS5pZCwgbm9kZURhdGEpO1xufVxuXG5mdW5jdGlvbiBleGVjdXRlR3JhcGgobm9kZXMsIHJlbGF0aW9uc2hpcHMpIHtcbiAgY29uc3QgZGF0YU1hcCA9IG5ldyBNYXAoKTtcbiAgY29uc3QgcGVuZGluZ05vZGVzID0gWy4uLm5vZGVzXTtcbiAgY29uc3QgdmlzaXRlZCA9IG5ldyBTZXQoKTtcblxuICB3aGlsZSAocGVuZGluZ05vZGVzLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBub2RlID0gcGVuZGluZ05vZGVzLnNoaWZ0KCk7XG4gICAgY29uc3QgcGFyZW50SWRzID0gZ2V0UGFyZW50SWRzKG5vZGUuaWQsIHJlbGF0aW9uc2hpcHMpO1xuXG4gICAgY29uc3QgYWxsUGFyZW50RGF0YUF2YWlsYWJsZSA9IHBhcmVudElkcy5ldmVyeSgocGFyZW50SWQpID0+IGRhdGFNYXAuaGFzKHBhcmVudElkKSk7XG5cbiAgICBpZiAoIWFsbFBhcmVudERhdGFBdmFpbGFibGUpIHtcbiAgICAgIHBlbmRpbmdOb2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKCF2aXNpdGVkLmhhcyhub2RlLmlkKSkge1xuICAgICAgZXhlY3V0ZU5vZGUobm9kZSwgZGF0YU1hcCwgcmVsYXRpb25zaGlwcyk7XG4gICAgICB2aXNpdGVkLmFkZChub2RlLmlkKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGF0YU1hcDtcbn1cblxuLy8gRGVmaW5lIGEgc2ltcGxlIGNvbXB1dGUgZnVuY3Rpb24gdGhhdCBnZW5lcmF0ZXMgZGF0YSBiYXNlZCBvbiBtdWx0aXBsZSBwYXJlbnQgZGF0YS5cbmZ1bmN0aW9uIGNvbXB1dGVOb2RlKHBhcmVudERhdGFBcnJheSkge1xuICBjb25zdCBzdW0gPSBwYXJlbnREYXRhQXJyYXkucmVkdWNlKChhY2MsIGRhdGEpID0+IGFjYyArIGRhdGEsIDApO1xuICByZXR1cm4gc3VtO1xufVxuXG4vLyBCdWlsZCB0aGUgZ3JhcGguXG5jb25zdCBub2RlcyA9IFtcbiAgY3JlYXRlTm9kZSgncm9vdCcsICgpID0+IDEpLFxuICBjcmVhdGVOb2RlKCdjaGlsZDEnLCAoW3Jvb3REYXRhXSkgPT4gcm9vdERhdGEgKyAxKSxcbiAgY3JlYXRlTm9kZSgnY2hpbGQyJywgKFtyb290RGF0YV0pID0+IHJvb3REYXRhICsgMiksXG4gIGNyZWF0ZU5vZGUoJ2NoaWxkMycsIChbY2hpbGQxRGF0YSwgY2hpbGQyRGF0YV0pID0+IGNoaWxkMURhdGEgKiBjaGlsZDJEYXRhKSxcbl07XG5cbi8vIERlZmluZSByZWxhdGlvbnNoaXBzIGJldHdlZW4gbm9kZXMuXG5jb25zdCByZWxhdGlvbnNoaXBzID0gW1xuICBjcmVhdGVSZWxhdGlvbnNoaXAoJ3Jvb3QnLCAnY2hpbGQxJyksXG4gIGNyZWF0ZVJlbGF0aW9uc2hpcCgncm9vdCcsICdjaGlsZDInKSxcbiAgY3JlYXRlUmVsYXRpb25zaGlwKCdjaGlsZDEnLCAnY2hpbGQzJyksXG4gIGNyZWF0ZVJlbGF0aW9uc2hpcCgnY2hpbGQyJywgJ2NoaWxkMycpLFxuXTtcblxuLy8gRXhlY3V0ZSB0aGUgZ3JhcGguXG5jb25zdCBkYXRhTWFwID0gZXhlY3V0ZUdyYXBoKG5vZGVzLCByZWxhdGlvbnNoaXBzKTtcblxuLy8gR2V0IHRoZSBjb21wdXRlZCBkYXRhIGZvciBhbnkgbm9kZS5cbmNvbnNvbGUubG9nKCdDaGlsZE5vZGUzIGRhdGE6JywgZGF0YU1hcC5nZXQoJ2NoaWxkMycpKTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVOb2RlIiwiaWQiLCJjb21wdXRlRm4iLCJjcmVhdGVSZWxhdGlvbnNoaXAiLCJwYXJlbnRJZCIsImNoaWxkSWQiLCJnZXRQYXJlbnRJZHMiLCJub2RlSWQiLCJyZWxhdGlvbnNoaXBzIiwiZmlsdGVyIiwicmVsYXRpb25zaGlwIiwibWFwIiwiZ2V0Q2hpbGRJZHMiLCJleGVjdXRlTm9kZSIsIm5vZGUiLCJkYXRhTWFwIiwicGFyZW50SWRzIiwicGFyZW50RGF0YSIsImdldCIsIm5vZGVEYXRhIiwic2V0IiwiZXhlY3V0ZUdyYXBoIiwibm9kZXMiLCJNYXAiLCJwZW5kaW5nTm9kZXMiLCJ2aXNpdGVkIiwiU2V0IiwibGVuZ3RoIiwic2hpZnQiLCJhbGxQYXJlbnREYXRhQXZhaWxhYmxlIiwiZXZlcnkiLCJoYXMiLCJwdXNoIiwiYWRkIiwiY29tcHV0ZU5vZGUiLCJwYXJlbnREYXRhQXJyYXkiLCJzdW0iLCJyZWR1Y2UiLCJhY2MiLCJkYXRhIiwicm9vdERhdGEiLCJjaGlsZDFEYXRhIiwiY2hpbGQyRGF0YSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJTQUFTQSxVQUFVLENBQUNDLEVBQUUsRUFBRUMsU0FBUyxFQUFFLENBQUM7SUFDbEMsTUFBTSxDQUFDLENBQUM7UUFDTkQsRUFBRTtRQUNGQyxTQUFTO0lBQ1gsQ0FBQztBQUNILENBQUM7U0FFUUMsa0JBQWtCLENBQUNDLFFBQVEsRUFBRUMsT0FBTyxFQUFFLENBQUM7SUFDOUMsTUFBTSxDQUFDLENBQUM7UUFDTkQsUUFBUTtRQUNSQyxPQUFPO0lBQ1QsQ0FBQztBQUNILENBQUM7U0FFUUMsWUFBWSxDQUFDQyxNQUFNLEVBQUVDLGNBQWEsRUFBRSxDQUFDO0lBQzVDLE1BQU0sQ0FBQ0EsY0FBYSxDQUNqQkMsTUFBTSxFQUFFQyxZQUFZLEdBQUtBLFlBQVksQ0FBQ0wsT0FBTyxLQUFLRSxNQUFNO01BQ3hESSxHQUFHLEVBQUVELFlBQVksR0FBS0EsWUFBWSxDQUFDTixRQUFROztBQUNoRCxDQUFDO1NBRVFRLFdBQVcsQ0FBQ0wsTUFBTSxFQUFFQyxjQUFhLEVBQUUsQ0FBQztJQUMzQyxNQUFNLENBQUNBLGNBQWEsQ0FDakJDLE1BQU0sRUFBRUMsWUFBWSxHQUFLQSxZQUFZLENBQUNOLFFBQVEsS0FBS0csTUFBTTtNQUN6REksR0FBRyxFQUFFRCxZQUFZLEdBQUtBLFlBQVksQ0FBQ0wsT0FBTzs7QUFDL0MsQ0FBQztTQUVRUSxXQUFXLENBQUNDLElBQUksRUFBRUMsUUFBTyxFQUFFUCxjQUFhLEVBQUUsQ0FBQztJQUNsRCxLQUFLLENB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\n//# sourceURL=webpack-internal:///./utils/renderer.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "three" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("three");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.js"));
module.exports = __webpack_exports__;

})();